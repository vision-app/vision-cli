#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

/**
 * Parse Commands
 */
const program = require('commander');
program
    // .option('-c, --config-path <path>', 'Vusion config path')
    // .option('-d, --directory <directory>', 'Optional to choose directory')
    .option('-r, --recursive', 'Recursive to resolve directory')
    .option('-v, --verbose', 'Show full path')
    .parse(process.argv);
global.extraArgs = program.args;

const directory = path.resolve(process.cwd(), program.args[0] || '');

// const type = program.args[0];
// if (!type) {
//     console.error('Input which type do you want to list!');
//     process.exit(1);
// }

// let directory;
// try {
//     const config = global.vusionConfig = require('../config/resolve')(program.configPath);
//     directory = config.libraryPath;
// } catch (e) {
//     console.log(e);
// }
// if (program.directory)

function listComponents(rootPath, relativePath) {
    const dirPath = path.join(rootPath, relativePath);
    const files = fs.readdirSync(dirPath);

    const components = [];
    const subdirPaths = [];
    files.forEach((filename) => {
        if (filename[0] === '.' || filename === 'node_modules')
            return;

        if (filename.endsWith('.vue'))
            components.push(filename);
        else {
            const filepath = path.join(dirPath, filename);
            if (fs.statSync(filepath).isDirectory())
                subdirPaths.push(filename);
        }
    });
    if (program.recursive)
        subdirPaths.forEach((subdirPath) => listComponents(rootPath, relativePath + subdirPath + '/'));
    if (program.verbose)
        components.forEach((component) => console.info(path.join(rootPath, relativePath + component)));
    else
        components.forEach((component) => console.info(relativePath + component));
}

listComponents(directory, '');
